using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Runtime.InteropServices;

namespace testLG13.VirtualKeyboard
{
    class User32
    {


        /// <summary>
        /// User32 API to generate mouse move
        /// </summary>
        /// <remarks>generated by http://pinvoke.net/default.aspx/user32/mouse_event.html </remarks>
        /// <param name="dwFlags"></param>
        /// <param name="dx"></param>
        /// <param name="dy"></param>
        /// <param name="dwData"></param>
        /// <param name="dwExtraInfo"></param>
        [DllImport("user32.dll")]
        static extern void mouse_event(uint dwFlags, int dx, int dy, uint dwData,UIntPtr dwExtraInfo);

        const uint MOUSEEVENTF_ABSOLUTE = 0x8000;
        const uint MOUSEEVENTF_LEFTDOWN = 0x0002;
        const uint MOUSEEVENTF_LEFTUP = 0x0004;
        const uint MOUSEEVENTF_MIDDLEDOWN = 0x0020;
        const uint MOUSEEVENTF_MIDDLEUP = 0x0040;
        const uint MOUSEEVENTF_MOVE = 0x0001;
        const uint MOUSEEVENTF_RIGHTDOWN = 0x0008;
        const uint MOUSEEVENTF_RIGHTUP = 0x0010;
        const uint MOUSEEVENTF_XDOWN = 0x0080;
        const uint MOUSEEVENTF_XUP = 0x0100;
        const uint MOUSEEVENTF_WHEEL = 0x0800;
        const uint MOUSEEVENTF_HWHEEL = 0x01000;

        [Flags]
        public enum MouseEventFlags : uint
        {
            LEFTDOWN = 0x00000002,
            LEFTUP = 0x00000004,
            MIDDLEDOWN = 0x00000020,
            MIDDLEUP = 0x00000040,
            MOVE = 0x00000001,
            ABSOLUTE = 0x00008000,
            RIGHTDOWN = 0x00000008,
            RIGHTUP = 0x00000010,
            WHEEL = 0x00000800,
            XDOWN = 0x00000080,
            XUP = 0x00000100
        }


        //Use the values of this enum for the 'dwData' parameter
        //to specify an X button when using MouseEventFlags.XDOWN or
        //MouseEventFlags.XUP for the dwFlags parameter.
        public enum MouseEventDataXButtons : uint
        {
            XBUTTON1 = 0x00000001,
            XBUTTON2 = 0x00000002
        }

        /// <summary>
        /// User32 API Call to generate keyboard event 
        /// </summary>
        /// <remarks>Generated by http://pinvoke.net/default.aspx/user32/keybd_event.html and const from https://docs.microsoft.com/fr-fr/windows/win32/inputdev/virtual-key-codes <remarks>
        /// <param name="bVk">virtual-key code  . The code must be a value in the range 1 to 254. For a complete list, see User32.VK_* constants.</param>
        /// <param name="bScan">hardware scan code for the key</param>
        /// <param name="dwFlags">define various aspects of function operation. This parameter can be one or more of the following values : KEYEVENTF_EXTENDEDKEY or KEYEVENTF_KEYUP</param>
        /// <param name="dwExtraInfo">additional value associated with the key stroke.</param>
        [DllImport("user32.dll")]
        static extern void keybd_event(byte bVk, byte bScan, uint dwFlags, int dwExtraInfo);

        //If specified, the scan code was preceded by a prefix byte having the value 0xE0 (224).
        const uint KEYEVENTF_EXTENDEDKEY = 0x0001;

        // If specified, the key is being released. If not specified, the key is being depressed.
        const uint KEYEVENTF_KEYUP = 0x0002;

        const uint VK_LBUTTON = 0x01;
        const uint VK_RBUTTON = 0x02;
        const uint VK_CANCEL = 0x03;
        const uint VK_MBUTTON = 0x04;
        const uint VK_XBUTTON1 = 0x05;
        const uint VK_XBUTTON2 = 0x06;
        // const uint VK_UNDEFINED = 0x07
        const uint VK_BACK = 0x08;
        const uint VK_TAB = 0x09;
        // const uint VK_RESERVERD = 0x0A-0B
        const uint VK_CLEAR = 0x0C;
        const uint VK_RETURN = 0x0D;
        //const uint VK_UNDEFINED = 0x0E-0F
        const uint VK_SHIFT = 0x10;
        const uint VK_CONTROL = 0x11;
        const uint VK_MENU = 0x12;
        const uint VK_PAUSE = 0x13;
        const uint VK_CAPITAL = 0x14;
        const uint VK_KANA = 0x15;
        const uint VK_HANGUEL = 0x15;
        const uint VK_HANGUL = 0x15;
        const uint VK_IME_ON = 0x16;
        const uint VK_JUNJA = 0x17;
        const uint VK_FINAL = 0x18;
        const uint VK_HANJA = 0x19;
        const uint VK_KANJI = 0x19;
        const uint VK_IME_OFF = 0x1A;
        const uint VK_ESCAPE = 0x1B;
        const uint VK_CONVERT = 0x1C;
        const uint VK_NONCONVERT = 0x1D;
        const uint VK_ACCEPT = 0x1E;
        const uint VK_MODECHANGE = 0x1F;
        const uint VK_SPACE = 0x20;
        const uint VK_PRIOR = 0x21;
        const uint VK_NEXT = 0x22;
        const uint VK_END = 0x23;
        const uint VK_HOME = 0x24;
        const uint VK_LEFT = 0x25;
        const uint VK_UP = 0x26;
        const uint VK_RIGHT = 0x27;
        const uint VK_DOWN = 0x28;
        const uint VK_SELECT = 0x29;
        const uint VK_PRINT = 0x2A;
        const uint VK_EXECUTE = 0x2B;
        const uint VK_SNAPSHOT = 0x2C;
        const uint VK_INSERT = 0x2D;
        const uint VK_DELETE = 0x2E;
        const uint VK_HELP = 0x2F;
        const uint VK_KEY_0 = 0x30;
        const uint VK_KEY_1 = 0x31;
        const uint VK_KEY_2 = 0x32;
        const uint VK_KEY_3 = 0x33;
        const uint VK_KEY_4 = 0x34;
        const uint VK_KEY_5 = 0x35;
        const uint VK_KEY_6 = 0x36;
        const uint VK_KEY_7 = 0x37;
        const uint VK_KEY_8 = 0x38;
        const uint VK_KEY_9 = 0x39;
        // const uint VK_UNDEFINED = 0x3A-40
        const uint VK_KEY_A = 0x41;
        const uint VK_KEY_B = 0x42;
        const uint VK_KEY_C = 0x43;
        const uint VK_KEY_D = 0x44;
        const uint VK_KEY_E = 0x45;
        const uint VK_KEY_F = 0x46;
        const uint VK_KEY_G = 0x47;
        const uint VK_KEY_H = 0x48;
        const uint VK_KEY_I = 0x49;
        const uint VK_KEY_J = 0x4A;
        const uint VK_KEY_K = 0x4B;
        const uint VK_KEY_L = 0x4C;
        const uint VK_KEY_M = 0x4D;
        const uint VK_KEY_N = 0x4E;
        const uint VK_KEY_O = 0x4F;
        const uint VK_KEY_P = 0x50;
        const uint VK_KEY_Q = 0x51;
        const uint VK_KEY_R = 0x52;
        const uint VK_KEY_S = 0x53;
        const uint VK_KEY_T = 0x54;
        const uint VK_KEY_U = 0x55;
        const uint VK_KEY_V = 0x56;
        const uint VK_KEY_W = 0x57;
        const uint VK_KEY_X = 0x58;
        const uint VK_KEY_Y = 0x59;
        const uint VK_KEY_Z = 0x5A;
        const uint VK_LWIN = 0x5B;
        const uint VK_RWIN = 0x5C;
        const uint VK_APPS = 0x5D;
        // const uint VK_RESERVED = 0x5E
        const uint VK_SLEEP = 0x5F;
        const uint VK_NUMPAD0 = 0x60;
        const uint VK_NUMPAD1 = 0x61;
        const uint VK_NUMPAD2 = 0x62;
        const uint VK_NUMPAD3 = 0x63;
        const uint VK_NUMPAD4 = 0x64;
        const uint VK_NUMPAD5 = 0x65;
        const uint VK_NUMPAD6 = 0x66;
        const uint VK_NUMPAD7 = 0x67;
        const uint VK_NUMPAD8 = 0x68;
        const uint VK_NUMPAD9 = 0x69;
        const uint VK_MULTIPLY = 0x6A;
        const uint VK_ADD = 0x6B;
        const uint VK_SEPARATOR = 0x6C;
        const uint VK_SUBTRACT = 0x6D;
        const uint VK_DECIMAL = 0x6E;
        const uint VK_DIVIDE = 0x6F;
        const uint VK_F1 = 0x70;
        const uint VK_F2 = 0x71;
        const uint VK_F3 = 0x72;
        const uint VK_F4 = 0x73;
        const uint VK_F5 = 0x74;
        const uint VK_F6 = 0x75;
        const uint VK_F7 = 0x76;
        const uint VK_F8 = 0x77;
        const uint VK_F9 = 0x78;
        const uint VK_F10 = 0x79;
        const uint VK_F11 = 0x7A;
        const uint VK_F12 = 0x7B;
        const uint VK_F13 = 0x7C;
        const uint VK_F14 = 0x7D;
        const uint VK_F15 = 0x7E;
        const uint VK_F16 = 0x7F;
        const uint VK_F17 = 0x80;
        const uint VK_F18 = 0x81;
        const uint VK_F19 = 0x82;
        const uint VK_F20 = 0x83;
        const uint VK_F21 = 0x84;
        const uint VK_F22 = 0x85;
        const uint VK_F23 = 0x86;
        const uint VK_F24 = 0x87;
        // const uint VK_UNASSINGED = 0x88-8F
        const uint VK_NUMLOCK = 0x90;
        const uint VK_SCROLL = 0x91;
        // const uint VK_OEMSPECIFIC = 0x92-96
        // const uint VK_UNASSIGNED = 0x97-9F
        const uint VK_LSHIFT = 0xA0;
        const uint VK_RSHIFT = 0xA1;
        const uint VK_LCONTROL = 0xA2;
        const uint VK_RCONTROL = 0xA3;
        const uint VK_LMENU = 0xA4;
        const uint VK_RMENU = 0xA5;
        const uint VK_BROWSER_BACK = 0xA6;
        const uint VK_BROWSER_FORWARD = 0xA7;
        const uint VK_BROWSER_REFRESH = 0xA8;
        const uint VK_BROWSER_STOP = 0xA9;
        const uint VK_BROWSER_SEARCH = 0xAA;
        const uint VK_BROWSER_FAVORITES = 0xAB;
        const uint VK_BROWSER_HOME = 0xAC;
        const uint VK_VOLUME_MUTE = 0xAD;
        const uint VK_VOLUME_DOWN = 0xAE;
        const uint VK_VOLUME_UP = 0xAF;
        const uint VK_MEDIA_NEXT_TRACK = 0xB0;
        const uint VK_MEDIA_PREV_TRACK = 0xB1;
        const uint VK_MEDIA_STOP = 0xB2;
        const uint VK_MEDIA_PLAY_PAUSE = 0xB3;
        const uint VK_LAUNCH_MAIL = 0xB4;
        const uint VK_LAUNCH_MEDIA_SELECT = 0xB5;
        const uint VK_LAUNCH_APP1 = 0xB6;
        const uint VK_LAUNCH_APP2 = 0xB7;
        // const uint VK_RESERVED = 0xB8-B9
        const uint VK_OEM_1 = 0xBA;
        const uint VK_OEM_PLUS = 0xBB;
        const uint VK_OEM_COMMA = 0xBC;
        const uint VK_OEM_MINUS = 0xBD;
        const uint VK_OEM_PERIOD = 0xBE;
        const uint VK_OEM_2 = 0xBF;
        const uint VK_OEM_3 = 0xC0;
        // const uint VK_RESERVED = 0xC1-D7
        // const uint VK_UNASSIGNED = 0xD8-DA
        const uint VK_OEM_4 = 0xDB;
        const uint VK_OEM_5 = 0xDC;
        const uint VK_OEM_6 = 0xDD;
        const uint VK_OEM_7 = 0xDE;
        const uint VK_OEM_8 = 0xDF;
        // const uint VK_RESERVED = 0xE0
        // const uint VK_UNASSIGNED = 0xE1
        const uint VK_OEM_102 = 0xE2;
        // const uint VK_OEM_SPECIFIC = 0xE3-E4
        const uint VK_PROCESSKEY = 0xE5;
        // const uint VK_OEM_SPECIFIC = 0xE6
        const uint VK_PACKET = 0xE7;
        // const uint VK_UNASSIGNED = 0xE8
        // const uint VK_OEM_SPECIFIC = 0xE9-F5
        const uint VK_ATTN = 0xF6;
        const uint VK_CRSEL = 0xF7;
        const uint VK_EXSEL = 0xF8;
        const uint VK_EREOF = 0xF9;
        const uint VK_PLAY = 0xFA;
        const uint VK_ZOOM = 0xFB;
        const uint VK_NONAME = 0xF;
        const uint VK_PA1 = 0xFD;
        const uint VK_OEM_CLEAR = 0xFE;

    }
}
